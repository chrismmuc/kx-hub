# Cloud Workflow for daily batch processing pipeline
# Triggered by Pub/Sub topic: daily-ingest (published by ingest function)
# Orchestrates: normalize → embed (future) → store (future)

main:
  params: [event]
  steps:
    - init:
        assign:
          - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
          - region: "europe-west4"

    - log_start:
        call: sys.log
        args:
          text: ${"Starting batch pipeline workflow - triggered by event"}
          severity: INFO

    # Step 1: Call normalize function to transform JSON → Markdown
    - call_normalize_function:
        try:
          call: http.post
          args:
            url: ${"https://europe-west4-" + project_id + ".cloudfunctions.net/normalize-function"}
            auth:
              type: OIDC
            timeout: 600
          result: normalize_result
        retry:
          predicate: ${http.default_retry_predicate}
          max_retries: 3
          backoff:
            initial_delay: 2
            max_delay: 60
            multiplier: 2
        except:
          as: e
          steps:
            - log_normalize_error:
                call: sys.log
                args:
                  text: ${"Normalize function failed: " + e.message}
                  severity: ERROR
            - fail_workflow:
                raise: ${e}

    - log_normalize_success:
        call: sys.log
        args:
          text: ${"Normalize function completed successfully"}
          severity: INFO

    # Placeholder for Story 1.3: Embed & Store
    - placeholder_embed_step:
        call: sys.log
        args:
          text: "TODO: Call embed function (Story 1.3)"
          severity: INFO

    # Return success
    - return_success:
        return:
          status: "success"
          normalize_result: ${normalize_result}
